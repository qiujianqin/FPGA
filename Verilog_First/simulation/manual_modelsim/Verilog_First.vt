// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "01/01/2019 14:22:35"
                                                                                
// Verilog Test Bench template for design : Verilog_First
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 
//仿真的单位为1ps 精度为1ps
`timescale 1 ps/ 1 ps
module Verilog_First_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;//多余的信号 也可以删除
// test vector input registers
reg CLK_50M;
reg RST_N;
// wires                                               
wire LED1;

// assign statements (if any)                          
Verilog_First i1 (
// port map - connection between master ports and signals/registers   
	.CLK_50M(CLK_50M),
	.LED1(LED1),
	.RST_N(RST_N)
);

//信号的初始化 #10000表示延迟10000ps（10ns）
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
	#0 CLK_50M = 1'b0;
	#10000 RST_N = 1'b0;
	#10000 RST_N = 1'b1;
	#10000000 $stop;
// --> end                                                                   
end                                                    
always #10000                                                
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
	CLK_50M = ~CLK_50M;																		                                              
// --> end                                             
end                                                    
endmodule

